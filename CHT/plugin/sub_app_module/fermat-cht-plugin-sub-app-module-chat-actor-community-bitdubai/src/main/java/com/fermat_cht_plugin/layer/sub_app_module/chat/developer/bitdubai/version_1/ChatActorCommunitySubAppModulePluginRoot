package com.fermat_cht_plugin.layer.sub_app_module.chat.developer.bitdubai.version_1;

import com.bitdubai.fermat_api.CantStartPluginException;
import com.bitdubai.fermat_api.layer.all_definition.common.system.annotations.NeededAddonReference;
import com.bitdubai.fermat_api.layer.all_definition.common.system.annotations.NeededPluginReference;
import com.bitdubai.fermat_api.layer.all_definition.common.system.interfaces.FermatManager;
import com.bitdubai.fermat_api.layer.all_definition.common.system.utils.PluginVersionReference;
import com.bitdubai.fermat_api.layer.all_definition.enums.Addons;
import com.bitdubai.fermat_api.layer.all_definition.enums.Layers;
import com.bitdubai.fermat_api.layer.all_definition.enums.Platforms;
import com.bitdubai.fermat_api.layer.all_definition.enums.Plugins;
import com.bitdubai.fermat_api.layer.all_definition.enums.ServiceStatus;
import com.bitdubai.fermat_api.layer.all_definition.util.Version;
import com.bitdubai.fermat_api.layer.osa_android.file_system.PluginFileSystem;
import com.bitdubai.fermat_cht_api.layer.actor_connection.interfaces.ChatActorConnectionManager;
import com.bitdubai.fermat_cht_api.layer.actor_network_service.interfaces.ChatManager;
import com.bitdubai.fermat_cht_api.layer.identity.interfaces.ChatIdentityManager;

import com.bitdubai.fermat_pip_api.layer.platform_service.error_manager.interfaces.ErrorManager;
import com.fermat_cht_plugin.layer.sub_app_module.chat.developer.bitdubai.version_1.structure.ChatActorCommunityManager;
import com.bitdubai.fermat_api.layer.all_definition.common.system.abstract_classes.AbstractPlugin;

import java.util.List;


/**
 * Created by Eleazar (eorono@protonmail.com) on 2/4/2016.
 */

public class ChatActorCommunitySubAppModulePluginRoot extends AbstractPlugin{

    @NeededAddonReference(platform = Platforms.PLUG_INS_PLATFORM     , layer = Layers.PLATFORM_SERVICE     , addon  = Addons.ERROR_MANAGER     )
    private ErrorManager errorManager;

    @NeededAddonReference (platform = Platforms.OPERATIVE_SYSTEM_API  , layer = Layers.SYSTEM               , addon  = Addons .PLUGIN_FILE_SYSTEM)
    private PluginFileSystem pluginFileSystem;

    @NeededPluginReference(platform = Platforms.CHAT_ACTOR_PLATFORM, layer = Layers.ACTOR_NETWORK_SERVICE, plugin = Plugins.CHAT_ACTOR  )
    private ChatManager chatActorNetworkServiceManager;

    @NeededPluginReference(platform = Platforms.CHAT_ACTOR_PLATFORM, layer = Layers.IDENTITY             , plugin = Plugins.CHAT_ACTOR     )
    private ChatIdentityManager chatIdentityManager;


    @NeededPluginReference(platform = Platforms.CHAT_ACTOR_PLATFORM, layer = Layers.ACTOR_CONNECTION     , plugin = Plugins.CHAT_ACTOR     )
    private ChatActorConnectionManager chatActorConnectionManager;

    ChatActorCommunityManager fermatManager;

    public ChatActorCommunitySubAppModulePluginRoot() {
        super(new PluginVersionReference(new Version()));
    }


    @Override
    public void start() throws CantStartPluginException {

        try {
            fermatManager = new ChatActorCommunityManager(
                    chatIdentityManager,
                    chatActorConnectionManager,
                    chatActorNetworkServiceManager,
                    errorManager,
                    pluginFileSystem,
                    pluginId,
                    getPluginVersionReference()
            );


            this.serviceStatus = ServiceStatus.STARTED;

        } catch (Exception exception) {

            throw new CantStartPluginException(
                    exception,
                    null,
                    null
            );
        }
    }


    public FermatManager getManager() {
        return fermatManager;
    }

}
